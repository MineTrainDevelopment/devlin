TwitchAPI:
  ClientID: ""
  CLientSecret: ""

TwitchChannel:
  ChatAccountToken: "" #OAuth Token for IRC USer (You can get yours here: http://twitchapps.com/tmi/)
  ReplyChannel: "" #The name of the channel the bot sould work in.

Settings:
  ReplyDelay: 60 #Seconds
  StreamUpTranslation: "Stream läuft wieder"
  StreamDownTranslation: "Stream Offline"
  RequestBasedResponseChance: 20 #20% How high the chance is that the bot will select a sentence because the keyword of the sentence was mentioned in the request. - percentage from 0-100

  StandaloneCommands: #Determine whether or not the comments can be triggered without a trigger word.
    CustomCommand: true
    TimeCommand: true
    JokeCommand: false
  
  TriggerWords:
    - "Devlin"
  TimeCommandTriggers:
    - "!time"
    - "uhrzeit"
    - "wie spät"
  JokeCommand:
    isAktiv: true
    JokeLanguage: DE
    RequireBotTriggerWord: true #For example "devlin" from TriggerWords:
    Triggers:
      - "witz"
      - "joke"

CustomCommands: #{USER} {STREAMER} {TIME}
  - "!test % {USER} This is a test command!"
  - "!github % {USER} Follow @minetrainlp on GitHub -> https://github.com/MineTrainDevelopment!"

#You can mark a word as the sentence "KEY", for the Request Based Responds. You can do that by using -- %{WORD}% 
#You can add a second key to a part from the key by using &{WORD}& inside a key. -- This is for doble words. Example: %{chocolate&{cookie}&}%
SillySentences: #{USER}, {STREAMER}, {TIME}, %{KEY_WORD}%, %{KEY&{WORD}&}%
  - "{USER} hat gepupst! NotLikeThis"
  - "/me stellt eine packung %{Kekse}% in den chat"

StreamUpSentences: #{USER} {STREAMER} {TIME} {UP}
  - "{STREAMER} ist unsichtbar geworden! Er spielt Verstecken mit uns. - {DOWN}"

StreamDownSentences: #{USER} {STREAMER} {TIME} {DOWN}
  - "{STREAMER} ist wieder da. Er hat uns wirklich vermisst! - {UP}"

TimeSentences: #{USER} {STREAMER} {TIME}
  - "Ist es schon {TIME}? Ich sollte mich beeilen und meine Sammlung von Socken sortieren."